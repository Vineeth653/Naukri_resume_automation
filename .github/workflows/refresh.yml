name: Refresh Naukri Resume

on:
  schedule:
    - cron: "0 */6 * * *"   # runs every 6 hours
  workflow_dispatch:        # allows manual trigger

jobs:
  refresh:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "selenium>=4.6.0"

      - name: Install Chrome & ChromeDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip curl xvfb

          # Install latest stable Google Chrome
          wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt-get install -y ./google-chrome-stable_current_amd64.deb

          # Detect Chrome major version
          CHROME_VERSION=$(google-chrome --version | grep -oP '\d+' | head -1)
          echo "Installed Chrome version: $CHROME_VERSION"

          # Fetch matching ChromeDriver version using Chrome for Testing JSON
          DRIVER_VERSION=$(curl -s https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions.json \
            | jq -r ".channels.Stable.version")
          echo "Latest stable Chrome/Driver version: $DRIVER_VERSION"

          # Download ChromeDriver
          DRIVER_MAJOR=$(echo $DRIVER_VERSION | cut -d. -f1)
          wget -q "https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/$DRIVER_VERSION/linux64/chromedriver-linux64.zip"
          unzip chromedriver-linux64.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver

      - name: Run script
        env:
          NAUKRI_EMAIL: ${{ secrets.NAUKRI_EMAIL }}
          NAUKRI_PASSWORD: ${{ secrets.NAUKRI_PASSWORD }}
        run: |
          ls -R   # debug: list files so weâ€™re sure where we are
          xvfb-run -a python refresh_resume.py

      - name: Upload debug screenshots
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: debug-screenshots
          path: |
            *.png
